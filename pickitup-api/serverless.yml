# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: pickitup-api
# app and org for use with dashboard.serverless.com
app: pickitup-api
org: paulisache

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 512 # optional, in MB, default is 1024
  region: ${opt:region, 'eu-central-1'} # Overwrite the default region used. Default is us-east-1
  environment:
    DYNAMODB_PICKITUP: ${self:service}-${self:provider.stage}
    COGNITO_ARN: arn:aws:cognito-idp:eu-central-1:336977241321:userpool/eu-central-1_ghwwtGXgl
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, 'eu-central-1'}:*:table/${self:provider.environment.DYNAMODB_PICKITUP}"
resources:
  # DynamoDB
  - ${file(resources/dynamodb.yml)}
# The `functions` block defines what code to deploy
functions:
  signinUri:
    handler: domains/authorization/handler.signinUri
    events:
      - http:
          path: sign-in-uri
          method: get
          cors: true
  token:
    handler: domains/authorization/handler.token
    events:
      - http:
          path: token
          method: post
          cors: true
  createMeniuItem:
    handler: domains/meniu/handler.create
    events:
      - http:
          path: meniu/{vendorId}
          method: post
          cors: true
          authorizer:
            name: authorizer
            arn:  "${self:provider.environment.COGNITO_ARN}"
          # request:
          #     schema:
          #       application/json: ${file(create_request.json)}